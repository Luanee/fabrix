# Which of these should have stages?

default_install_hook_types:
  - commit-msg
  - prepare-commit-msg
  - pre-commit
  - pre-merge-commit
  - pre-push
  - pre-rebase
  - post-checkout
  - post-commit
  - post-merge
  - post-rewrite

repos:
    - repo: https://github.com/pre-commit/pre-commit-hooks
      rev: v5.0.0
      hooks:
          # General
          - id: check-added-large-files
          - id: check-case-conflict
          - id: check-executables-have-shebangs
          - id: check-merge-conflict
          - id: check-symlinks
          - id: check-toml
          - id: check-xml
          - id: check-yaml
          - id: detect-private-key
          - id: end-of-file-fixer
          - id: fix-byte-order-marker
          - id: trailing-whitespace

          # Json
          - id: check-json
          - id: pretty-format-json # Checks that all your JSON files are pretty.

          # Python
          - id: check-ast # Check whether files parse as valid python.
          - id: check-builtin-literals # Require literal syntax when initializing empty or zero Python builtin types.
          - id: check-docstring-first
          - id: debug-statements # Check for debugger imports and py37+ breakpoint() calls in python source.
          - id: name-tests-test # Assert that files in tests/ end in _test.py, or optionally test*.py
            args: [--pytest-test-first]
          - id: requirements-txt-fixer

    - repo: https://github.com/commitizen-tools/commitizen
      rev: v3.29.1
      hooks:
          - id: commitizen
            stages: [commit-msg]
          - id: commitizen-branch
            stages:
            - pre-push

    - repo: https://gitlab.com/smop/pre-commit-hooks
      rev: v1.0.0
      hooks:
          # Validates the structure of the pyproject.toml file.
          - id: check-poetry
