[project]
name = "fabrix"
version = "0.5.1"
description = "A python toolkit to evaluate, validate, and debug Azure Data Factory & Microsoft Fabric pipeline expressions with rich tracing."
authors = [{ name = "Pit Nahrstedt", email = "pit.nahrstedt@outlook.de" }]
requires-python = ">=3.11,<4.0"
readme = "README.md"
license = { text = "MIT" }
dependencies = [
    "pydantic (>=2.11.7,<3.0.0)",
    "rich (>=14.1.0,<15.0.0)",
    "pytz (>=2025.2,<2026.0)",
    "python-dateutil (>=2.9.0.post0,<3.0.0)",
]

[dependency-groups]
test = [
    "pytest==8.4.2",
    "pytest-cov==7.0.0",
    "pytest-sugar==1.1.1,<2",
    "pytest-mock==3.15.1",
]
dev = [
    "commitizen==4.9.1",
    "ruff==0.13.2",
    "mypy==1.18.2",
    "pre-commit==4.3.0,<5",
]
types = [
    "types-pytz==2025.2.0.20250809,<2026",
    "types-python-dateutil==2.9.0.20250822,<3",
]

[tool.uv]
default-groups = [
    "test",
    "dev",
    "types",
]

[tool.hatch.build.targets.sdist]
include = ["src/fabrix"]

[tool.hatch.build.targets.wheel]
include = ["src/fabrix"]

[tool.hatch.build.targets.wheel.sources]
"src/fabrix" = "fabrix"

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.commitizen]
name = "cz_conventional_commits"
changelog_incremental = true
bump_message = "ðŸš€ release version $new_version"
tag_format = "$version"
version_files = [
    "src/fabrix/version.py:__version__",
    "pyproject.toml:version"
]
version_scheme = "semver2"
version_provider = "pep621"
update_changelog_on_bump = true
major_version_zero = true

[tool.mypy]
junit_xml = "reports/mypy.xml"
plugins = "pydantic.mypy"
strict = true
disallow_subclassing_any = false
disallow_untyped_decorators = false
explicit_package_bases = true
ignore_missing_imports = true
pretty = true
show_column_numbers = true
show_error_codes = true
show_error_context = true
warn_unreachable = true
mypy_path = "src"

[tool.pydantic-mypy]
init_forbid_extra = true
init_typed = true
warn_required_dynamic_aliases = true
warn_untyped_fields = true

[tool.pytest.ini_options]
addopts = '''
    --color=yes
    --doctest-modules
    --strict-config
    --strict-markers
    --verbosity=2
    --junitxml=reports/junit.xml
    --cov-report=xml:reports/coverage.xml
    --cov-report=term
    --cov=src'''
filterwarnings = [
    "error",
    "ignore::DeprecationWarning",
    "ignore::UserWarning",
    "ignore::SyntaxWarning"
]
testpaths = ["src", "tests"]
xfail_strict = true
log_file_level = "INFO"
pythonpath = "src"

[tool.coverage.report]
skip_empty = true
show_missing = true
ignore_errors = true
exclude_lines = [
    "@abstractmethod",
    "@abc.abstractmethod",
    "if self.debug:",
    "pragma: no cover",
    "raise NotImplementedError",
    "if __name__ == .__main__.:"
]
exclude_also= [
  "class \\w+\\(Protocol\\):"
]
fail_under=80

[tool.coverage.xml]
output = "cover/coverage.xml"

[tool.coverage.run]
branch = true
disable_warnings = ["ignore::UserWarning"]
source = ["src", "tests"]
omit= [
  "*/__init__.py",
  "*/__version__.py",
  "tests/fixtures/*",
  "**/fixtures.py"
]

[tool.ruff]
line-length = 120
src = ["src", "tests"]
target-version = "py311"
force-exclude = true  # https://docs.astral.sh/ruff/settings/#force-exclude
preview = true  # https://docs.astral.sh/ruff/preview/
